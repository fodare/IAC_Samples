trigger:
- main

pool:
  name: Default
  #vmImage: ubuntu-latest

variables:
  projectRoot: '$(System.DefaultWorkingDirectory)/Azure_DevOps_Func'

stages:
- stage: Build
  jobs:
  - job: clean
    displayName: Clean agent build DIR
    workspace:
      clean: all
  
  - job: buildapp
    dependsOn: clean
    displayName: Build and restore app
    steps:
    - script: |
        dotnet restore
        dotnet build --configuration Release
      workingDirectory: $(projectRoot)

    # - task: DotNetCoreCLI@2
    #   inputs:
    #     command: 'publish'
    #     publishWebProjects: false
    #     projects: '*.csproj'
    #     arguments: '--configuration Release --output publish_output'
    #     zipAfterPublish: false
    #     modifyOutputPath: false
    #     workingDirectory: '$(projectRoot)'

    - task: ArchiveFiles@2
      displayName: "Archive project file"
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/Azure_DevOps_Func'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
        verbose: true

    - task: PublishBuildArtifacts@1
      displayName: Publish build artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    
    - task: AzureFunctionApp@2
      displayName: Update function app
      inputs:
        connectedServiceNameARM: 'Az_SVC_Connection'
        appType: 'functionAppLinux'
        appName: 'azure_devOps_func_sp'
        package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        deploymentMethod: 'auto'