trigger:
- main

pool:
  name: Default
  #vmImage: ubuntu-latest

variables:
  projectRoot: '$(System.DefaultWorkingDirectory)/Azure_DevOps_Func'

stages:
- stage: Build
  jobs:
  - job: clean
    displayName: Clean agent build DIR
    workspace:
      clean: all
  
  - job: buildapp 
    displayName: Build and restore app
    steps:
    - script: |
        dotnet restore
        dotnet build --configuration Release
      workingDirectory: $(projectRoot)
  
  - job: publishapp
    dependsOn: buildapp
    displayName: Publish and zip application project file
    steps:
    # - task: DotNetCoreCLI@2
    #   inputs:
    #     command: 'publish'
    #     publishWebProjects: false
    #     projects: '*.csproj'
    #     arguments: '--configuration Release'
    #     zipAfterPublish: false
    #     modifyOutputPath: false
    #     workingDirectory: '$(System.DefaultWorkingDirectory)/Azure_DevOps_Func'
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/Azure_DevOps_Func'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'

- stage: Deploy
  dependsOn: Build
  jobs:
    - job: 
      displayName: Download build artifacts
      steps:
        - task: DownloadBuildArtifacts@1
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            itemPattern: 
            downloadPath: '$(System.ArtifactsDirectory)'
            cleanDestinationFolder: true
    
    - job: Deployapp
      displayName: Deploy function app
      steps:
      - task: AzureFunctionApp@1 # Add this at the end of your file
        inputs:
          azureSubscription: 'Az_SVC_Connection'
          appType: 'functionAppLinux'
          appName: 'azure-devOps-func'
          package: '$(System.ArtifactsDirectory)'
          runtimeStack: 'DOTNET-ISOLATED|7.0'
          #Uncomment the next lines to deploy to a deployment slot
          #Note that deployment slots is not supported for Linux Dynamic SKU
          #deployToSlotOrASE: true
          #resourceGroupName: '<Resource Group Name>'
          #slotName: '<Slot name>'